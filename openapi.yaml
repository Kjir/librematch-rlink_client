---
openapi: 3.0.0
info:
  title: Relic Link API
  description: ""
  version: "2022.11.01"
servers:
  - url: https://aoe-api.reliclink.com
paths:
  /community/external/proxysteamuserrequest:
    get:
      parameters:
        - name: request
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: /ISteamUser/GetPlayerSummaries/v0002/
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: age2
        - name: profile_ids
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: '["192640"]'
        - name: profileNames
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: '["/steam/76561197984749679"]'
      responses:
        "200":
          description: Definition generated from Swagger Inspector
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model3"
  /community/leaderboard/GetPersonalStat:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
        - name: profile_ids
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: '["192640"]'
        - name: profile_names
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "[%22/steam/76561197984749679%22]"
        - name: aliases
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "[BlackRock]"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model4"
  /community/leaderboard/getRecentMatchHistory:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: age2
        - name: profile_ids
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: '["192640"]'
        - name: profile_names
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "[%22/steam/76561197984749679%22]"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model2"
  /community/advertisement/findAdvertisements:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/leaderboard/GetAvatarStatForProfile:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
        - name: profile_names
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "[%22/steam/76561197984749679%22]"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/achievement/getAchievements:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
        - name: profileids
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
          example: "[196240]"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/achievement/getAvailableAchievements:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/news:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/clan/find:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
        - name: joinPolicies
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
          example:
            - [0, 1, 2]
        - name: name
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "GL"
        - name: tags
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
        - name: start
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "1"
        - name: count
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "200"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/clan/getClanInfoFull:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
        - name: name
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "GL"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/CommunityEvent/getAvailableCommunityEvents:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/item/getInventoryByProfileIDs:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
        - name: profileids
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
          example: "[196240]"
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/leaderboard/getAvailableLeaderboards:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example:
            - age2
            - age1
      responses:
        "200":
          description: Definition generated from Swagger Inspector
  /community/leaderboard/getLeaderboard2:
    get:
      parameters:
        - name: title
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: age2
        - name: leaderboard_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "3"
        - name: start
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "1"
        - name: count
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "200"
        - name: sortBy
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "1"
        - name: platform
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: PC_STEAM
      responses:
        "200":
          description: Definition generated from Swagger Inspector
components:
  schemas:
    Result:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Model0:
      properties:
        result:
          $ref: "#/components/schemas/Result"
    Model1_Result:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Members:
      properties:
        profile_id:
          type: integer
          format: int32
        name:
          type: string
        alias:
          type: string
        personal_statgroup_id:
          type: integer
          format: int32
        xp:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        leaderboardregion_id:
          type: integer
          format: int32
        country:
          type: string
    StatGroups:
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: integer
          format: int32
        members:
          type: array
          items:
            $ref: "#/components/schemas/Members"
    Model1:
      properties:
        result:
          $ref: "#/components/schemas/Model1_Result"
        statGroups:
          type: array
          items:
            $ref: "#/components/schemas/StatGroups"
        leaderboardStats:
          type: array
          items: {}
    Model2_Result:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Matchhistoryreportresults:
      properties:
        matchhistory_id:
          type: integer
          format: int32
        profile_id:
          type: integer
          format: int32
        resulttype:
          type: integer
          format: int32
        teamid:
          type: integer
          format: int32
        race_id:
          type: integer
          format: int32
        xpgained:
          type: integer
          format: int32
        counters:
          type: string
        matchstartdate:
          type: integer
          format: int32
    Matchurls:
      properties:
        profile_id:
          type: integer
          format: int32
        url:
          type: string
        size:
          type: integer
          format: int32
        datatype:
          type: integer
          format: int32
    MatchHistoryStats:
      properties:
        id:
          type: integer
          format: int32
        creator_profile_id:
          type: integer
          format: int32
        mapname:
          type: string
        maxplayers:
          type: integer
          format: int32
        matchtype_id:
          type: integer
          format: int32
        options:
          type: string
        slotinfo:
          type: string
        description:
          type: string
        startgametime:
          type: integer
          format: int32
        completiontime:
          type: integer
          format: int32
        observertotal:
          type: integer
          format: int32
        matchhistoryreportresults:
          type: array
          items:
            $ref: "#/components/schemas/Matchhistoryreportresults"
        matchhistoryitems:
          type: array
          items: {}
        matchurls:
          type: array
          items:
            $ref: "#/components/schemas/Matchurls"
    Profiles:
      properties:
        profile_id:
          type: integer
          format: int32
        name:
          type: string
        alias:
          type: string
        personal_statgroup_id:
          type: integer
          format: int32
        xp:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        leaderboardregion_id:
          type: integer
          format: int32
        country:
          type: string
    Model2:
      properties:
        result:
          $ref: "#/components/schemas/Model2_Result"
        matchHistoryStats:
          type: array
          items:
            $ref: "#/components/schemas/MatchHistoryStats"
        profiles:
          type: array
          items:
            $ref: "#/components/schemas/Profiles"
    Model3_Result:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Avatars:
      properties:
        profile_id:
          type: integer
          format: int32
        name:
          type: string
        alias:
          type: string
        personal_statgroup_id:
          type: integer
          format: int32
        xp:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        leaderboardregion_id:
          type: integer
          format: int32
        country:
          type: string
    Players:
      properties:
        steamid:
          type: string
        communityvisibilitystate:
          type: integer
          format: int32
        profilestate:
          type: integer
          format: int32
        personaname:
          type: string
        commentpermission:
          type: integer
          format: int32
        profileurl:
          type: string
        avatar:
          type: string
        avatarmedium:
          type: string
        avatarfull:
          type: string
        avatarhash:
          type: string
        personastate:
          type: integer
          format: int32
    Response:
      properties:
        players:
          type: array
          items:
            $ref: "#/components/schemas/Players"
    SteamResults:
      properties:
        response:
          $ref: "#/components/schemas/Response"
    Model3:
      properties:
        result:
          $ref: "#/components/schemas/Model3_Result"
        avatars:
          type: array
          items:
            $ref: "#/components/schemas/Avatars"
        steamResults:
          $ref: "#/components/schemas/SteamResults"
    Model4_Result:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Model4_StatGroups_Members:
      properties:
        profile_id:
          type: integer
          format: int32
        name:
          type: string
        alias:
          type: string
        personal_statgroup_id:
          type: integer
          format: int32
        xp:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        leaderboardregion_id:
          type: integer
          format: int32
        country:
          type: string
    Model4_StatGroups:
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: integer
          format: int32
        members:
          type: array
          items:
            $ref: "#/components/schemas/Model4_StatGroups_Members"
    LeaderboardStats:
      properties:
        statgroup_id:
          type: integer
          format: int32
        leaderboard_id:
          type: integer
          format: int32
        wins:
          type: integer
          format: int32
        losses:
          type: integer
          format: int32
        streak:
          type: integer
          format: int32
        disputes:
          type: integer
          format: int32
        drops:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
        ranktotal:
          type: integer
          format: int32
        ranklevel:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        regionrank:
          type: integer
          format: int32
        regionranktotal:
          type: integer
          format: int32
        lastmatchdate:
          type: integer
          format: int32
    Model4:
      properties:
        result:
          $ref: "#/components/schemas/Model4_Result"
        statGroups:
          type: array
          items:
            $ref: "#/components/schemas/Model4_StatGroups"
        leaderboardStats:
          type: array
          items:
            $ref: "#/components/schemas/LeaderboardStats"
